pool:
  vmImage: ubuntu-latest

resources:
  containers:
    - container: node
      image: node:latest

trigger:
  - main

stages:
  - stage: Build
    jobs:
      - job: Build
        container: node
        steps:
          - checkout: self
            clean: true
            displayName: Checkout Source
          - script: yarn install --frozen-lockfile
            displayName: Install using yarn with frozen lockfile
          - script: yarn build
            displayName: Build Using Parcel
          - task: PublishPipelineArtifact@1
            displayName: Publish Build
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)/dist"
              artifact: dist
              publishLocation: pipeline

  - stage: DeployDev
    displayName: Deploy Dev
    condition: succeeded()
    variables:
      - group: Plesk_FTP
    jobs:
      - job: Deploy
        displayName: Deploy Dev
        container: node
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download Dev Build
            inputs:
              source: current
              artifact: dist
              targetPath: $(Pipeline.Workspace)/wapp
          - task: FtpUpload@2
            displayName: Upload To Plesk
            inputs:
              credentialsOption: inputs
              username: $(FtpUser)
              password: $(FtpPassword)
              rootDirectory: $(Pipeline.Workspace)/wapp
              remoteDirectory: /odm-dev/ui
              serverUrl: $(FtpServerUrl)
              clean: true
              preservePaths: true
            env:
              FtpPassword: $(FtpPassword)

  - stage: DeployProd
    displayName: Deploy Prod
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    variables:
      - group: Plesk_FTP
    jobs:
      - job: Deploy
        displayName: Deploy Prod
        container: node
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download Prod Build
            inputs:
              source: current
              artifact: dist
              targetPath: $(Pipeline.Workspace)/wapp
          - task: FtpUpload@2
            displayName: Upload To Plesk
            inputs:
              credentialsOption: inputs
              username: $(FtpUser)
              password: $(FtpPassword)
              rootDirectory: $(Pipeline.Workspace)/wapp
              remoteDirectory: /odm/ui
              serverUrl: $(FtpServerUrl)
              clean: true
              preservePaths: true
            env:
              FtpPassword: $(FtpPassword)
